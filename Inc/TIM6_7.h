/*
 * TIM6_7.h
 *
 *  Created on: Mar 7, 2025
 *      Author: Benjamin
 */

#ifndef INC_TIM6_7_H_
#define INC_TIM6_7_H_

#include "Std_Types.h"

typedef enum
{
    TIM6 = 0,
    TIM7,
} dtTIM6_7_ID;

typedef struct
{
    /* The counter value is compares to this value */
    uint16  AutoReload;

    /* value of prescaler; the effective prescaler value = this value + 1 */
    uint16  Prescaler;

    /* 1:  update event generation is disabled  */
    uint8   UpdateDisable   :1;

    /* 0: update event is generated by:
     *    - counter over/uderflow
     *    - setting the UG bit
     *    - through slave mode controller
     * 1: only over/unerflow generates UEV
     */
    uint8   UpdateSource    :1;
    uint8   OnePulse        :1;

    /* 1: ARR register is buffered */
    uint8   ARPreload       :1;
    uint8   Enable          :1;
    uint8   MasterMode      :2;

    /* 0: DMA event generation is disabled
     * 1: DMA event generation is enabled */
    uint8   DmaTrig         :1;

    /* 0: ISR event generation is disabled
     * 1: ISR event generation is enabled */
    uint8   IsrGenEn        :1;
} dtTim67Config;

extern void TIM6_7_Config(dtTIM6_7_ID id, dtTim67Config *const config);
extern void TIM6_7_Start(dtTIM6_7_ID id);
extern void TIM6_7_Stop(dtTIM6_7_ID id);

#endif /* INC_TIM6_7_H_ */
